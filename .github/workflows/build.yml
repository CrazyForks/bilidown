name: Build SEA Executable

on:
  push:
    branches: [main]

jobs:
  build-sea:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install postject
        run: npm install -g postject

      - name: Build SEA blob
        run: |
          echo '{ "main": "dist/main.js", "output": "sea-prep.blob" }' > sea-config.json
          node --experimental-sea-config sea-config.json

      - name: Copy Node binary to bilidown
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            node -e "require('fs').copyFileSync(process.execPath, 'bilidown.exe')"
          else
            cp $(command -v node) bilidown
          fi

      - name: Remove signature (macOS only)
        if: runner.os == 'macOS'
        run: codesign --remove-signature bilidown

      - name: Inject SEA blob
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            npx postject bilidown.exe NODE_SEA_BLOB sea-prep.blob --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            npx postject bilidown NODE_SEA_BLOB sea-prep.blob \
              --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2 \
              --macho-segment-name NODE_SEA
          else
            npx postject bilidown NODE_SEA_BLOB sea-prep.blob \
              --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2
          fi

      - name: Re-sign binary (macOS only)
        if: runner.os == 'macOS'
        run: codesign --sign - bilidown

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bilidown-${{ runner.os }}
          path: |
            bilidown
            bilidown.exe
